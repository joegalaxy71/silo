syntax = "proto3";
package api;

//import "google/api/annotations.proto";

// messages

message Outcome {
    bool error = 1;
    string message = 2;
}

message Unit {
    string Name = 1;
}

message Units {
    repeated Units Unit = 1;
}

message Node {
    Outcome Outcome = 1;
    string Hostname = 2;
    string Ip = 3;
    string Poolname = 4;
}

message Nodes {
    Outcome Outcome = 1;
    repeated Node Nodes = 2;
}

message Master {
    Outcome Outcome = 1;
    string Hostname = 2;
    string Ip = 3;
    string Poolname = 4;
}

message Solution {
    Outcome Outcome = 1;
    string Name = 2;
    string Hostname = 3;
    string Status = 4;
    string Ip = 5;
    string Poolname = 6;
}

message Solutions {
    Outcome Outcome = 1;
    repeated Solution Solutions = 2;
}

message Void {

}

message CopyArgs {
    string Source = 1;
    string Destination = 2;
}



// services

service Silod {
    rpc Version(Void) returns (Outcome) {}
    rpc MasterInit(Master) returns (Master) {}

    rpc NodeList(Void) returns (Nodes) {}
    rpc NodeAdd(Node) returns (Node) {}
    rpc NodeRemove(Node) returns (Node) {}
    rpc NodePurge(Node) returns (Node) {}

    rpc SolutionList(Void) returns (Solutions) {}
    rpc SolutionCopy(CopyArgs) returns (Outcome) {}
    rpc SolutionCreate(Solution) returns (Solution) {} //+1 -> available
    rpc SolutionDestroy(Solution) returns (Solution) {} //-1 ->missing

    rpc SolutionBackup(Solution) returns (Solution) {}
    rpc SolutionRestore(Solution) returns (Solution) {}

    rpc SolutionSnapshot(Solution) returns (Solution) {}
    rpc SolutionRollback(Solution) returns (Solution) {}

    rpc SolutionDeploy(Solution) returns (Solution) {} //+1 -> deployed
    rpc SolutionRetire(Solution) returns (Solution) {} //-1 -> available

    rpc SolutionStart(Solution) returns (Solution) {} //+1 -> started
    rpc SolutionStop(Solution) returns (Solution) {} //-1 -> deployed

    rpc SolutionExpose(Solution) returns (Solution) {} //+1 -> exposed
    rpc SolutionContain(Solution) returns (Solution) {} //-1 ->started

}

service SiloLet {
    rpc Version(Void) returns (Outcome) {}
    rpc NodeAdd(Node) returns (Node) {}
    rpc NodeRemove(Node) returns (Node) {}
    rpc NodePurge(Node) returns (Node) {}
    rpc SolutionDeploy(Solution) returns (Solution) {} //+1 -> deployed
    rpc SolutionRetire(Solution) returns (Solution) {} //-1 -> available
    rpc SolutionStart(Solution) returns (Solution) {} //+1 -> started
    rpc SolutionStop(Solution) returns (Solution) {} //-1 -> deployed
    rpc SolutionExpose(Solution) returns (Solution) {} //+1 -> exposed
    rpc SolutionContain(Solution) returns (Solution) {} //-1 ->started
}
